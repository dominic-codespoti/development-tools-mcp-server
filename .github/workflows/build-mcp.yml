name: build-mcp
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Read version from csproj
        id: csproj_version
        run: |
          VERSION=$(grep '<Version>' src/DeveloperTools.Mcp.Server/DeveloperTools.Mcp.Server.csproj | sed -E 's/.*<Version>(.+)<\/Version>.*/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"
      - name: Pack as .NET tool (with csproj version)
        run: |
          dotnet pack src/DeveloperTools.Mcp.Server -c Release --output ./nupkg /p:Version=$VERSION
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: developer-tools-mcp-server-nuget
          path: ./nupkg/*.nupkg
  release:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Generate version
        id: version
        run: echo "main-$(date -u +'%Y%m%d-%H%M%S')" > version.txt
      - name: Read version
        id: read_version
        run: |
          VERSION=$(cat version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"
      - name: Create tag
        run: |
          VERSION=$(cat version.txt)
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git tag $VERSION
          git push origin $VERSION
      - name: Publish .NET tool package to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.read_version.outputs.version }}
          name: Release ${{ steps.read_version.outputs.version }}
          files: ./artifacts/developer-tools-mcp-server-nuget/*.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish-nuget:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download .NET tool package artifact
        uses: actions/download-artifact@v4
        with:
          name: developer-tools-mcp-server-nuget
          path: ./nupkg
      - name: Push .NET tool package to NuGet.org (latest)
        run: |
          dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
          dotnet tool update --global developer-tools-mcp-server --version $VERSION || true
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
